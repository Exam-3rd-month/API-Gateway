{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Endpoints for LocalEats",
        "title": "LocalEats API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/is-valid-token/{user_id}": {
            "get": {
                "description": "Checks if a user's token is valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check token validity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.IsValidTokenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/auth/logout/{user_id}": {
            "post": {
                "description": "Logs out a user by their user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.LogoutResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration response",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/auth/reset-password-access": {
            "post": {
                "description": "Send a verification code to the user's email for password reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get access to reset password",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.IsValidUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dish": {
            "post": {
                "description": "Add a new dish to the menu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Add a new dish",
                "parameters": [
                    {
                        "description": "Dish details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.AddDishRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.AddDishResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dish/kitchen/{kitchen_id}": {
            "get": {
                "description": "Get a list of dishes for a specific kitchen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "List dishes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.ListDishesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dish/{dish_id}": {
            "put": {
                "description": "Update an existing dish's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Update a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dish_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated dish details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateDishRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateDishResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing dish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Delete a dish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dish_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.DeleteDishResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dish/{dish_id}/nutrition": {
            "put": {
                "description": "Update nutrition information for a specific dish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dish"
                ],
                "summary": "Update dish nutrition info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dish ID",
                        "name": "dish_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nutrition info update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateDishNutritionInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateDishNutritionInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/kitchen": {
            "post": {
                "description": "Create a new kitchen with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Create a new kitchen",
                "parameters": [
                    {
                        "description": "Kitchen creation details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.CreateKitchenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.CreateKitchenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/kitchen/list": {
            "post": {
                "description": "Get a list of kitchens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "List kitchens",
                "parameters": [
                    {
                        "description": "List kitchens request parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.ListKitchensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.ListKitchensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/kitchen/search": {
            "post": {
                "description": "Search for kitchens based on provided criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Search kitchens",
                "parameters": [
                    {
                        "description": "Search criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.SearchKitchensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.SearchKitchensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/kitchen/{kitchen_id}": {
            "get": {
                "description": "Get details of a specific kitchen by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Get kitchen details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.GetKitchenResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing kitchen's details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Update a kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated kitchen details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.UpdateKitchenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.UpdateKitchenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/kitchen/{kitchen_id}/working-hours": {
            "post": {
                "description": "Create working hours for a specific kitchen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "kitchen"
                ],
                "summary": "Create kitchen working hours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Kitchen working hours details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreateKitchenWorkingHoursRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreateKitchenWorkingHoursResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "description": "Create a new order with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/order/kitchen/{kitchen_id}": {
            "get": {
                "description": "Get orders for a specific kitchen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get orders for a kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.GetOrderByKitchenIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/order/user/{user_id}": {
            "get": {
                "description": "Get a list of orders for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "List orders for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.ListOfOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/status": {
            "put": {
                "description": "Update the status of an existing order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated order status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateOrderStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.UpdateOrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/payment": {
            "post": {
                "description": "Creates a new payment for an order using credit card information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Create a new payment",
                "parameters": [
                    {
                        "description": "Payment information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreatePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.CreatePaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/review": {
            "post": {
                "description": "Add a new review for a kitchen or order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Add a new review",
                "parameters": [
                    {
                        "description": "Review details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.AddReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.AddReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/review/kitchen/{kitchen_id}": {
            "get": {
                "description": "Get a list of reviews for a specific kitchen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "List reviews for a kitchen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Kitchen ID",
                        "name": "kitchen_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.ListReviewsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/user/profile/{id}": {
            "get": {
                "description": "Get the profile of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.GetProfileResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the profile of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated profile information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.UpdateProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/user/reset-password": {
            "post": {
                "description": "Reset the password for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Reset user password",
                "parameters": [
                    {
                        "description": "Password reset information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_auth_pb.ResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/user/{user_id}/activity": {
            "get": {
                "description": "Retrieve activity statistics for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_genprotos_order_pb.GetUserActivityResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gateway_genprotos_auth_pb.CreateKitchenRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cuisine_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.CreateKitchenResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "cuisine_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_auth_pb.GetKitchenResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "cuisine_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "total_orders": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.GetProfileResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.IsValidTokenResponse": {
            "type": "object",
            "properties": {
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "gateway_genprotos_auth_pb.IsValidUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.KitchenListItem": {
            "type": "object",
            "properties": {
                "cuisine_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "total_orders": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_auth_pb.ListKitchensRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_auth_pb.ListKitchensResponse": {
            "type": "object",
            "properties": {
                "kitchens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_auth_pb.KitchenListItem"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_auth_pb.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.RegisterResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "verify_password": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.ResetPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.SearchKitchensRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_auth_pb.SearchKitchensResponse": {
            "type": "object",
            "properties": {
                "kitchens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_auth_pb.KitchenListItem"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_auth_pb.UpdateKitchenRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.UpdateKitchenResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cuisine_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_auth_pb.UpdateProfileResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.AddDishRequest": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_order_pb.AddDishResponse": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dish_id": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_order_pb.AddReviewRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.AddReviewResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "rewiev_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.Allergens": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.CreateKitchenWorkingHoursRequest": {
            "type": "object",
            "properties": {
                "kitchen_id": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.WorkingHoursByDay"
                    }
                }
            }
        },
        "gateway_genprotos_order_pb.CreateKitchenWorkingHoursResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.WorkingHoursByDay"
                    }
                }
            }
        },
        "gateway_genprotos_order_pb.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "delivery_address": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.OrderRequest"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.CreateOrderResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "delivery_time": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.OrderResponse"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.CreatePaymentRequest": {
            "type": "object",
            "properties": {
                "card_number": {
                    "type": "string"
                },
                "cvv": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.CreatePaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.DeleteDishResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.DietaryInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.Dish": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "dish_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_order_pb.GetOrderByKitchenIdResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Order"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_order_pb.GetUserActivityResponse": {
            "type": "object",
            "properties": {
                "total_orders": {
                    "type": "integer"
                },
                "total_spent": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.ListDishesResponse": {
            "type": "object",
            "properties": {
                "dishes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Dish"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_order_pb.ListOfOrdersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Order"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_order_pb.ListReviewsResponse": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Review"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_order_pb.NutritionInfo": {
            "type": "object",
            "properties": {
                "calories": {
                    "type": "string"
                },
                "carbohydrates": {
                    "type": "string"
                },
                "fat": {
                    "type": "string"
                },
                "protein": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "kitchen_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_order_pb.OrderRequest": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "gateway_genprotos_order_pb.OrderResponse": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "review_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateDishNutritionInfoRequest": {
            "type": "object",
            "properties": {
                "allergens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Allergens"
                    }
                },
                "dietary_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.DietaryInfo"
                    }
                },
                "dish_id": {
                    "type": "string"
                },
                "nutrition_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.NutritionInfo"
                    }
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateDishNutritionInfoResponse": {
            "type": "object",
            "properties": {
                "allergens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.Allergens"
                    }
                },
                "dietary_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.DietaryInfo"
                    }
                },
                "dish_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nutrition_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gateway_genprotos_order_pb.NutritionInfo"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateDishRequest": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dish_id": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateDishResponse": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dish_id": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kitchen_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateOrderStatusRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.UpdateOrderStatusResponse": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "gateway_genprotos_order_pb.WorkingHoursByDay": {
            "type": "object",
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "day": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}